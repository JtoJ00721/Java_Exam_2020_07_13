package com.biz.score.service;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

import com.biz.score.domain.ScoreVO;

public class ScoreServiceImpl implements ScoreService {
	
	protected List<ScoreVO> scoreList;
	protected Scanner scan;
	protected String fileName;
	protected String fileName2;
	
	int[] allSum;
	float[] allAvg;
	
	public ScoreServiceImpl() {
		scoreList = new ArrayList<ScoreVO>();
		scan = new Scanner(System.in);
		fileName = "src/com/biz/score/data/score.txt";
		fileName2 = "src/com/biz/score/data/scoreList.txt";
		
		
		allSum = new int[4];
		allAvg = new float[4];
	}
	
	@Override
	public ScoreVO getScore(String strNum) {
		ScoreVO scorevo = null;
		
		for(ScoreVO sVO : scoreList) {
			if(sVO.getNum().equals(strNum)) {
				scorevo = sVO;
				break;
			}
		}
		return scorevo;
	}
	

	@Override
	public void load() {
		try {
			FileReader fileReader = new FileReader(fileName);
			BufferedReader buffer = new BufferedReader(fileReader);
			String reader = "";
			while(true){
			reader = buffer.readLine();
			if(reader == null) {
				break;
			}
			String[] scores = reader.split(":");
			ScoreVO scoreVO = new ScoreVO();
			scoreVO.setNum(scores[0]);
			scoreVO.setKor(Integer.valueOf(scores[1]));
			scoreVO.setEng(Integer.valueOf(scores[2]));
			scoreVO.setMath(Integer.valueOf(scores[3]));
			scoreVO.setMusic(Integer.valueOf(scores[4]));
			scoreVO.setSum(Integer.valueOf(scores[5]));
			scoreVO.setAvg(Float.valueOf(scores[6]));
			scoreList.add(scoreVO);
			}
			buffer.close();
			fileReader.close();
		} catch (FileNotFoundException e) {
			System.out.println("점수 파일 열기 오류");
		} catch (IOException e) {
			System.out.println("점수 파일 읽기 오류");
		}
	}

	@Override
	public boolean inputScore() {
		
		ScoreVO scoreVO = new ScoreVO();
		System.out.println("학번(end:프로그램 종료)");
		System.out.print(">>");
		String strNum = scan.nextLine();
		if(strNum.equals("end")) {
			return false;
		}
		int intNum = 0;
		try {
			intNum = Integer.valueOf(strNum);
		} catch(Exception e) {
			System.out.println("학번은 숫자만 ><\n다시 입력해 주세요");
			return true;
		}
		if(intNum <1 || intNum > 99999) {
			System.out.println("학번은 1부터 5자리 숫자까지만 가능 ><\n다시 입력해 주세요");
			return true;
		}
		strNum = String.format("%05d", intNum);
		
		for(ScoreVO sVO : scoreList) {
			if(sVO.getNum().equals(strNum)) {
				System.out.println(strNum + "학생의 성적정보가 이미 있습니다. ><");
				return true;
			}
		}
		
		System.out.println("국어점수(숫자만)");
		System.out.print(">>");
		String strKor = scan.nextLine();
		int intKor = 0;
		try {
			intKor = Integer.valueOf(strKor);
		} catch (Exception e) {
			System.out.println("점수는 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		if(intKor < 0 || intKor > 100) {
			System.out.println("점수는 0 ~ 100 까지의 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		
		System.out.println("영어점수(숫자만)");
		System.out.print(">>");
		String strEng = scan.nextLine();
		int intEng = 0;
		try {
			intEng = Integer.valueOf(strEng);
		} catch (Exception e) {
			System.out.println("점수는 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		if(intEng < 0 || intEng > 100) {
			System.out.println("점수는 0 ~ 100 까지의 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		
		System.out.println("수학점수(숫자만)");
		System.out.print(">>");
		String strMath = scan.nextLine();
		int intMath = 0;
		try {
			intMath = Integer.valueOf(strMath);
		} catch (Exception e) {
			System.out.println("점수는 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		if(intMath < 0 || intMath > 100) {
			System.out.println("점수는 0 ~ 100 까지의 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		
		System.out.println("음악점수(숫자만)");
		System.out.print(">>");
		String strMusic = scan.nextLine();
		int intMusic = 0;
		try {
			intMusic = Integer.valueOf(strMusic);
		} catch (Exception e) {
			System.out.println("점수는 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		if(intMusic < 0 || intMusic > 100) {
			System.out.println("점수는 0 ~ 100 까지의 숫자만 가능합니다 ><\n다시 입력해 주세요");
			return true;
		}
		scoreVO.setNum(strNum);
		scoreVO.setKor(intKor);
		scoreVO.setEng(intEng);
		scoreVO.setMath(intMath);
		scoreVO.setMusic(intMusic);
		
		scoreList.add(scoreVO);
		this.saveScoreVO(scoreVO);
		
		
		return true;
	}

	@Override
	public void calcSum() {
		
		for(ScoreVO svo : scoreList) {
			
			int sum = svo.getKor();
			sum += svo.getEng();
			sum += svo.getMath();
			sum += svo.getMusic();
			svo.setSum(sum);
		}
		
	}

	@Override
	public void calcAvg() {
		for(ScoreVO svo : scoreList) {
			int sum = svo.getSum();
			float avg = (float)sum/4;
			svo.setAvg(avg);
		}
		
	}

	@Override
	public void getList() {
		int size = scoreList.size();
		Arrays.fill(allSum, 0);
		Arrays.fill(allAvg, 0);
		
		System.out.println("=============================================================");
		System.out.println("성적표");
		System.out.println("=============================================================");
		System.out.println("학번\t국어\t영어\t수학\t음악\t총점\t평균");
		System.out.println("-------------------------------------------------------------");
		for(ScoreVO svo : scoreList) {
			System.out.printf("%s\t",svo.getNum());
			System.out.printf("%d\t",svo.getKor());
			System.out.printf("%d\t",svo.getEng());
			System.out.printf("%d\t",svo.getMath());
			System.out.printf("%d\t",svo.getMusic());
			System.out.printf("%d\t",svo.getSum());
			System.out.println(svo.getAvg());
			
			allSum[0] += svo.getKor();
			allSum[1] += svo.getEng();
			allSum[2] += svo.getMath();
			allSum[3] += svo.getMusic();
			
			allAvg[0] = (float)allSum[0]/size;
			allAvg[1] = (float)allSum[1]/size;
			allAvg[2] = (float)allSum[2]/size;
			allAvg[3] = (float)allSum[3]/size;
			
		}
		System.out.println("-------------------------------------------------------------");
		System.out.print("총점:\t");
		for(int i = 0; i < 4; i++) {
			System.out.print(allSum[i] + "\t");
		}
		System.out.println();
		System.out.print("평균:\t");
		for(int i = 0; i < 4 ; i++) {
			System.out.print(allAvg[i] + "\t");
		}
		System.out.println();
		System.out.println("=============================================================");
		
	}



	public void saveScoreVO(ScoreVO scoreVO) {
		
		FileWriter fWriter = null;
		PrintWriter pWriter = null;
		
		try {
			fWriter = new FileWriter(fileName, true);
			pWriter = new PrintWriter(fWriter);
			pWriter.printf("%s:", scoreVO.getNum());
			pWriter.printf("%d:", scoreVO.getKor());
			pWriter.printf("%d:", scoreVO.getEng());
			pWriter.printf("%d:", scoreVO.getMath());
			pWriter.printf("%d\n", scoreVO.getMusic());
			
			pWriter.flush();
			pWriter.close();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
	}

	@Override
	public void writeList() {
		PrintStream pStream = null;
				
		try {
			pStream = new PrintStream(fileName2);
			int size = scoreList.size();
			Arrays.fill(allSum, 0);
			Arrays.fill(allAvg, 0);
			
			pStream.println("=============================================================");
			pStream.println("성적표");
			pStream.println("=============================================================");
			pStream.println("학번\t국어\t영어\t수학\t음악\t총점\t평균");
			pStream.println("-------------------------------------------------------------");
			for(ScoreVO svo : scoreList) {
				pStream.printf("%s\t",svo.getNum());
				pStream.printf("%d\t",svo.getKor());
				pStream.printf("%d\t",svo.getEng());
				pStream.printf("%d\t",svo.getMath());
				pStream.printf("%d\t",svo.getMusic());
				pStream.printf("%d\t",svo.getSum());
				pStream.println(svo.getAvg());
				
				allSum[0] += svo.getKor();
				allSum[1] += svo.getEng();
				allSum[2] += svo.getMath();
				allSum[3] += svo.getMusic();
				
				allAvg[0] = (float)allSum[0]/size;
				allAvg[1] = (float)allSum[1]/size;
				allAvg[2] = (float)allSum[2]/size;
				allAvg[3] = (float)allSum[3]/size;
				
			}
			pStream.println("-------------------------------------------------------------");
			pStream.print("총점:\t");
			for(int i = 0; i < 4; i++) {
				pStream.print(allSum[i] + "\t");
			}
			pStream.println();
			pStream.print("평균:\t");
			for(int i = 0; i < 4 ; i++) {
				pStream.print(allAvg[i] + "\t");
			}
			pStream.println();
			pStream.println("=============================================================");
			pStream.close();
		} catch (FileNotFoundException e) {
			System.out.println("파일이 없습니다 ><");
		}
				

	}
}



